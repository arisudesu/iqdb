#!/usr/bin/perl

use warnings;
use strict;
use File::Find;

#system("renice 15 $$");
my $tag = shift or die "Give server tag on command line.\n";
our $dbid;
do "/usr/src/packages/sim/$tag.cfg" and $dbid or die "Can't get dbid: $!\n";
chdir "$ENV{HOME}/doujin/$tag" or die "Can't chdir: $!\n";
my $db_file = "$ENV{HOME}/stuff/$tag.idb";
open my $upd, "/usr/src/packages/sim/$tag.res" or die "Can't read $tag.res: $!\n";

my $ec = 0;

sub path {
	return substr($_[0],0,1)."/".substr($_[0],1,1)."/".substr($_[0],2,1)."/$_[0]";
}

sub setglob {
	my @files = glob "$_[0]$_[1]";
	return unless @files == 1;
	$_ = substr $files[0], length $_[0],8;
	return $_;
}

my @cmd;
while (<$upd>) {
	my @arg = split;
	$_=$arg[0];
	my $id=substr $_,0,8;
	push @cmd, "set_res $dbid 0x$id $arg[1] $arg[2]" and next if -e path($_).".jpg";
	push @cmd, "set_res $dbid 0x$id $arg[1] $arg[2]" and next if -e "todelete/$_.jpg";
	push @cmd, "set_res $dbid 0x$id $arg[1] $arg[2]" and next if -e "deleted/$_.jpg";
	push @cmd, "set_res $dbid 0x$_ $arg[1] $arg[2]" and next if setglob "xx/", "????????-$_.jpg";
	push @cmd, "set_res $dbid 0x$_ $arg[1] $arg[2]" and next if setglob "todelete/", "????????-$_.jpg";
	push @cmd, "set_res $dbid 0x$_ $arg[1] $arg[2]" and next if setglob "deleted/", "????????-$_.jpg";
	warn "Removed MD5 $_ not found.\n";
}

$SIG{PIPE} = 'IGNORE';
$|=1;
while (@cmd) {
	print "Opening connection for ", scalar @cmd, " commands...\n";
	open my $nc, "|-", "nc", "localhost", "5566" or die "Can't start nc: $!\n";
	select $nc; $|=1; select STDOUT;
	my $sent = 0;
	while ($sent < 16 and @cmd) {
		my $cmd = shift @cmd;
		print "$cmd\n";
		print $nc "$cmd\n";
		$sent++;
	}
	print $nc "done now\n";
	close $nc;
	die "Failed!\n" if $?;
	sleep 1 if @cmd;
}

die "Error code $ec\n" if $ec;
print "Done!\n";
