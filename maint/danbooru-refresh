#!/bin/sh
cd /usr/src/packages/sim
#exec >> refresh.log 2>> refresh.err
#date
#date 1>&2
if [ `id -u` -ne 502 ]; then
	echo Incorrect user ID: `id`
	exit 1;
fi
EC=0
if ! lockfile -r 0 update.lock; then
	echo Failed to obtain lock, aborting.
	exit 1;
fi
trap "rm -f update.lock" SIGHUP SIGINT SIGQUIT SIGTERM EXIT

export http_proxy=http://localhost:3128/
./danbooru-update danbooru   || let EC=$EC+2
./danbooru-update konachan   || let EC=$EC+2
./danbooru-update moe.imouto || let EC=$EC+2
./danbooru-db danbooru   || let EC=$EC+16;
./danbooru-db konachan   || let EC=$EC+16;
./danbooru-db moe.imouto || let EC=$EC+16;

SCREEN=imgSeekOne
OTHER=imgSeekTwo
if screen -ls|grep $SCREEN &> /dev/null; then
	SCREEN=imgSeekTwo
	OTHER=imgSeekOne
fi;
PID=`screen -ls|grep $OTHER|perl -lne 'print $1 if /(\d+)/'`
echo "Starting screen $SCREEN (other $OTHER pid $PID)"
screen -dmS $SCREEN ~/bin/imgSeek.server listen 5566 -r ~/stuff/haruhi.idb ~/stuff/danbooru.idb ~/stuff/konachan.idb ~/stuff/moe.imouto.idb
echo Waiting for $PID to exit.
COUNT=0
while [ -n "$PID" -a -d /proc/$PID ]; do
	let COUNT=$COUNT+1
	if [ $COUNT -gt 20 ]; then echo "Waited too long, aborting."; exit 1; fi;
	sleep 2;
done;
COUNT=0
while ! echo  -e "ping me\ndone now\n"|nc localhost 5566; do
	let COUNT=$COUNT+1
	if [ $COUNT -gt 3 ]; then echo "Waited too long, aborting."; exit 1; fi;
	sleep 5;
done;
touch ~/doujin/danbooru/.lastupdate
exit $EC
